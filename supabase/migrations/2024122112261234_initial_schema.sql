CREATE SCHEMA IF NOT EXISTS retro_speck;
SET search_path TO retro_speck;

CREATE TABLE "retros" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "public_id" uuid NOT NULL,
  "name" varchar NOT NULL,
  "phase" varchar NOT NULL,
  "creating_user_id" uuid NOT NULL,
  "facilitator_user_id" uuid NOT NULL,
  "current_card_id" integer,
  "created_at" timestamp NOT NULL DEFAULT NOW()
);

CREATE TABLE "retro_columns" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "name" varchar NOT NULL,
  "retro_id" integer NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT NOW()
);

CREATE TABLE "participants" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "public_id" uuid NOT NULL,
  "name" varchar NOT NULL,
  "retro_id" integer NOT NULL,
  "user_id" uuid NOT NULL,
  "vote_allotment" integer,
  "is_accepted" BOOLEAN NOT NULL DEFAULT FALSE,
  "created_at" timestamp NOT NULL DEFAULT NOW()
);

CREATE TABLE "cards" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "content" varchar NOT NULL,
  "participant_id" integer NOT NULL,
  "retro_column_id" integer NOT NULL,
  "parent_card_id" integer,
  "group_name" varchar,
  "created_at" timestamp NOT NULL DEFAULT NOW(),
  "updated_at" timestamp NOT NULL DEFAULT NOW()
);

CREATE TABLE "votes" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "participant_id" integer NOT NULL,
  "card_id" integer NOT NULL,
  "retro_id" integer NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT NOW()
);

-- FOREIGN KEY CONSTRAINTS
ALTER TABLE "retros" ADD FOREIGN KEY ("current_card_id") REFERENCES "cards" ("id");

ALTER TABLE "retro_columns" ADD FOREIGN KEY ("retro_id") REFERENCES "retros" ("id");

ALTER TABLE "participants" ADD FOREIGN KEY ("retro_id") REFERENCES "retros" ("id");

ALTER TABLE "cards" ADD FOREIGN KEY ("participant_id") REFERENCES "participants" ("id");

ALTER TABLE "cards" ADD FOREIGN KEY ("parent_card_id") REFERENCES "cards" ("id");

ALTER TABLE "cards" ADD FOREIGN KEY ("retro_column_id") REFERENCES "retro_columns" ("id");

ALTER TABLE "votes" ADD FOREIGN KEY ("card_id") REFERENCES "cards" ("id");

ALTER TABLE "votes" ADD FOREIGN KEY ("participant_id") REFERENCES "participants" ("id");

ALTER TABLE "votes" ADD FOREIGN KEY ("retro_id") REFERENCES "retros" ("id");

-- INDEXES
CREATE INDEX idx_cards_participant_id ON cards (participant_id);
CREATE INDEX idx_cards_retro_column_id ON cards (retro_column_id);
CREATE INDEX idx_cards_parent_card_id ON cards (parent_card_id);
CREATE INDEX idx_participants_retro_id ON participants (retro_id);
CREATE INDEX idx_participants_user_id ON participants (user_id);
CREATE INDEX idx_participants_public_id ON participants (public_id);
CREATE INDEX idx_retro_columns_retro_id ON retro_columns (retro_id);
CREATE INDEX idx_retros_retro_phase ON retros (phase);
CREATE INDEX idx_retros_creating_user_id ON retros (creating_user_id);
CREATE INDEX idx_retros_facilitator_user_id ON retros (facilitator_user_id);
CREATE INDEX idx_retros_current_card_id ON retros (current_card_id);
CREATE INDEX idx_retros_public_id ON retros (public_id);
CREATE INDEX idx_votes_retro_id ON votes (retro_id);
CREATE INDEX idx_votes_card_id ON votes (card_id);
CREATE INDEX idx_votes_participant_id ON votes (participant_id);

