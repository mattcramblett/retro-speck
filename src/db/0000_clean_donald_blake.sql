-- Current sql file was generated after introspecting the database
-- If you want to run this migration please uncomment this code before executing migrations
/*
CREATE SCHEMA "retro_speck";
--> statement-breakpoint
CREATE TABLE "retro_speck"."cards" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "retro_speck"."retro_speck.cards_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"content" varchar NOT NULL,
	"participant_id" integer NOT NULL,
	"retro_column_id" integer NOT NULL,
	"parent_card_id" integer,
	"group_name" varchar,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "retro_speck"."retros" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "retro_speck"."retro_speck.retros_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"public_id" uuid NOT NULL,
	"name" varchar NOT NULL,
	"phase" varchar NOT NULL,
	"creating_user_id" uuid NOT NULL,
	"facilitator_user_id" uuid NOT NULL,
	"current_card_id" integer,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "retro_speck"."retro_columns" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "retro_speck"."retro_speck.retro_columns_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar NOT NULL,
	"retro_id" integer NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "retro_speck"."participants" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "retro_speck"."retro_speck.participants_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"public_id" uuid NOT NULL,
	"name" varchar NOT NULL,
	"retro_id" integer NOT NULL,
	"user_id" uuid NOT NULL,
	"vote_allotment" integer,
	"is_accepted" boolean DEFAULT false NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "retro_speck"."votes" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "retro_speck"."retro_speck.votes_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"participant_id" integer NOT NULL,
	"card_id" integer NOT NULL,
	"retro_id" integer NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
ALTER TABLE "retro_speck"."cards" ADD CONSTRAINT "cards_participant_id_fkey" FOREIGN KEY ("participant_id") REFERENCES "retro_speck"."participants"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "retro_speck"."cards" ADD CONSTRAINT "cards_parent_card_id_fkey" FOREIGN KEY ("parent_card_id") REFERENCES "retro_speck"."cards"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "retro_speck"."cards" ADD CONSTRAINT "cards_retro_column_id_fkey" FOREIGN KEY ("retro_column_id") REFERENCES "retro_speck"."retro_columns"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "retro_speck"."retros" ADD CONSTRAINT "retros_current_card_id_fkey" FOREIGN KEY ("current_card_id") REFERENCES "retro_speck"."cards"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "retro_speck"."retro_columns" ADD CONSTRAINT "retro_columns_retro_id_fkey" FOREIGN KEY ("retro_id") REFERENCES "retro_speck"."retros"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "retro_speck"."participants" ADD CONSTRAINT "participants_retro_id_fkey" FOREIGN KEY ("retro_id") REFERENCES "retro_speck"."retros"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "retro_speck"."votes" ADD CONSTRAINT "votes_card_id_fkey" FOREIGN KEY ("card_id") REFERENCES "retro_speck"."cards"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "retro_speck"."votes" ADD CONSTRAINT "votes_participant_id_fkey" FOREIGN KEY ("participant_id") REFERENCES "retro_speck"."participants"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "retro_speck"."votes" ADD CONSTRAINT "votes_retro_id_fkey" FOREIGN KEY ("retro_id") REFERENCES "retro_speck"."retros"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "idx_cards_parent_card_id" ON "retro_speck"."cards" USING btree ("parent_card_id" int4_ops);--> statement-breakpoint
CREATE INDEX "idx_cards_participant_id" ON "retro_speck"."cards" USING btree ("participant_id" int4_ops);--> statement-breakpoint
CREATE INDEX "idx_cards_retro_column_id" ON "retro_speck"."cards" USING btree ("retro_column_id" int4_ops);--> statement-breakpoint
CREATE INDEX "idx_retros_creating_user_id" ON "retro_speck"."retros" USING btree ("creating_user_id" uuid_ops);--> statement-breakpoint
CREATE INDEX "idx_retros_current_card_id" ON "retro_speck"."retros" USING btree ("current_card_id" int4_ops);--> statement-breakpoint
CREATE INDEX "idx_retros_facilitator_user_id" ON "retro_speck"."retros" USING btree ("facilitator_user_id" uuid_ops);--> statement-breakpoint
CREATE INDEX "idx_retros_public_id" ON "retro_speck"."retros" USING btree ("public_id" uuid_ops);--> statement-breakpoint
CREATE INDEX "idx_retros_retro_phase" ON "retro_speck"."retros" USING btree ("phase" text_ops);--> statement-breakpoint
CREATE INDEX "idx_retro_columns_retro_id" ON "retro_speck"."retro_columns" USING btree ("retro_id" int4_ops);--> statement-breakpoint
CREATE INDEX "idx_participants_public_id" ON "retro_speck"."participants" USING btree ("public_id" uuid_ops);--> statement-breakpoint
CREATE INDEX "idx_participants_retro_id" ON "retro_speck"."participants" USING btree ("retro_id" int4_ops);--> statement-breakpoint
CREATE INDEX "idx_participants_user_id" ON "retro_speck"."participants" USING btree ("user_id" uuid_ops);--> statement-breakpoint
CREATE INDEX "idx_votes_card_id" ON "retro_speck"."votes" USING btree ("card_id" int4_ops);--> statement-breakpoint
CREATE INDEX "idx_votes_participant_id" ON "retro_speck"."votes" USING btree ("participant_id" int4_ops);--> statement-breakpoint
CREATE INDEX "idx_votes_retro_id" ON "retro_speck"."votes" USING btree ("retro_id" int4_ops);
*/